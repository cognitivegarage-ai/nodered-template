version: "3.9"

# docker_node_modules is used to store node_modules that are generated in the docker running environment of node-red, this allows us to have a separate node_modules folder having the expressJS local node_modules

x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-05-23T18-45-11Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  env_file:
    - ./prod.env
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

x-node-red-common: &node-red-common 
  image: nodered/node-red
  
  env_file:
    - ./prod.env
  expose:
    - "1880"
  volumes:
    - ../settings.js:/data/settings.js:ro
    - ../flows.json:/data/flows.json:ro
    - ../package-lock.json:/data/package-lock.json:ro
    - ../package.json:/data/package.json:ro
    - ../flows_cred.json:/data/flows_cred.json:ro
    # - ./installable:/data/installable:ro
    # - ./public:/data/public:ro
    - ../node_modules:/data/node_modules:ro
    # - ./docker_node_modules:/data/node_modules:ro
  depends_on:
    - node-red-dev
  restart: unless-stopped

# Implement this later
# volumes:
#   nodered_nodemodules:

services:

  node-red-dev:
    image: nodered/node-red
    
    hostname: node-red-dev
    env_file:
      - ./prod.env
    ports:
      - "1890:1880"
    entrypoint: >
      sh -c "
      npm install --prefix /data --unsafe-perm --no-update-notifier --no-fund --only=production
      && npm --no-update-notifier --no-fund start --cache /data/.npm -- --userDir /data"
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MINIO_HOST=nginx
      - MINIO_PORT=9000
    #   NODE_RED_CREDENTIAL_SECRET: ${NODE_RED_CREDENTIAL_SECRET}
    volumes:
      - ../:/data
      # - ./docker_node_modules:/data/node_modules
    restart: unless-stopped

    # depends_on:
    #   - nginx
  

  node-red1:
    <<: *node-red-common
    hostname: node-red1
    
    
  node-red2:
    <<: *node-red-common
    hostname: node-red2
    
    
  node-red3:
    <<: *node-red-common
    hostname: node-red3
    

  node-red4:
    <<: *node-red-common
    hostname: node-red4
    

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "1891:1880" # Accessing the node-red cluster
      - "9011:9001" # Accessing the web interface for Minio
      - "9010:9000" # Accessing the Minio API
    depends_on:
      - node-red1
      - node-red2
      - node-red3
      - node-red4
      - minio1
      - minio2
      - minio3
      - minio4
    
    
    # ! Source https://docs.min.io/docs/deploy-minio-on-docker-compose.html
    # ! https://raw.githubusercontent.com/minio/minio/master/docs/orchestration/docker-compose/docker-compose.yaml
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - ../data/cluster/minio_data/data1-1:/data1
      - ../data/cluster/minio_data/data1-2:/data2
    

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - ../data/cluster/minio_data/data2-1:/data1
      - ../data/cluster/minio_data/data2-2:/data2
    

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - ../data/cluster/minio_data/data3-1:/data1
      - ../data/cluster/minio_data/data3-2:/data2
    

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - ../data/cluster/minio_data/data4-1:/data1
      - ../data/cluster/minio_data/data4-2:/data2
    

  createbuckets:
    image: minio/mc
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
      - nginx
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://nginx:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/pubtesting;
      /usr/bin/mc policy set public myminio/pubtesting;
      /usr/bin/mc mb myminio/privtesting;
      /usr/bin/mc mb myminio/logs;
      /usr/bin/mc mb myminio/profiles;
      /usr/bin/mc mb myminio/configuration;
      exit 0;
      "
  
  
  router01:
    image: mongo:5.0
    container_name: router-01
    command: mongos --port 27017 --configdb rs-config-server/configsvr01:27017,configsvr02:27017,configsvr03:27017 --bind_ip_all
    ports:
      - 27117:27017
    volumes:
      - ./scripts:/scripts
  router02:
    image: mongo:5.0
    container_name: router-02
    command: mongos --port 27017 --configdb rs-config-server/configsvr01:27017,configsvr02:27017,configsvr03:27017 --bind_ip_all
    volumes:
      - ./scripts:/scripts
    ports:
      - 27118:27017
    links:
      - router01

## Config Servers
  configsvr01:
    image: mongo:5.0
    container_name: mongo-config-01 
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    volumes:
      - ./scripts:/scripts 
    ports:
      - 27119:27017
    links:
      - shard01-a
      - shard02-a
      - shard03-a
  configsvr02:
    image: mongo:5.0
    container_name: mongo-config-02 
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    volumes:
      - ./scripts:/scripts
    ports:
      - 27120:27017
    links:
      - configsvr01
  configsvr03:
    image: mongo:5.0
    container_name: mongo-config-03 
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    volumes:
      - ./scripts:/scripts
    ports:
      - 27121:27017
    links:
      - configsvr02

## Shards
  ## Shards 01
   
  shard01-a:
    image: mongo:5.0
    container_name: shard-01-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    volumes:
      - ./scripts:/scripts
      - ../data/cluster/shard01a:/data/db
    ports:
      - 27122:27017
    links:
      - shard01-b
      - shard01-c
  shard01-b:
    image: mongo:5.0
    container_name: shard-01-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    volumes:
      - ./scripts:/scripts
      - ../data/cluster/shard01b:/data/db
    ports:
      - 27123:27017
  shard01-c:
    image: mongo:5.0
    container_name: shard-01-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    volumes:
      - ./scripts:/scripts
      - ../data/cluster/shard01c:/data/db
    ports:
      - 27124:27017

  ## Shards 02
  shard02-a:
    image: mongo:5.0
    container_name: shard-02-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    volumes:
      - ./scripts:/scripts
      - ../data/cluster/shard02a:/data/db
    ports:
      - 27125:27017
    links:
      - shard02-b
      - shard02-c
  shard02-b:
    image: mongo:5.0
    container_name: shard-02-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    volumes:
      - ./scripts:/scripts
      - ../data/cluster/shard02b:/data/db
    ports:
      - 27126:27017
  shard02-c:
    image: mongo:5.0
    container_name: shard-02-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    volumes:
      - ./scripts:/scripts
      - ../data/cluster/shard02c:/data/db
    ports:
      - 27127:27017

  ## Shards 03
  shard03-a:
    image: mongo:5.0
    container_name: shard-03-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-03
    volumes:
      - ./scripts:/scripts
      - ../data/cluster/shard03a:/data/db
    ports:
      - 27128:27017
    links:
      - shard03-b
      - shard03-c
  shard03-b:
    image: mongo:5.0
    container_name: shard-03-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-03
    volumes:
      - ./scripts:/scripts
      - ../data/cluster/shard03b:/data/db
    ports:
      - 27129:27017
  shard03-c:
    image: mongo:5.0
    container_name: shard-03-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-03
    volumes:
      - ./scripts:/scripts
      - ../data/cluster/shard03c:/data/db
    ports:
      - 27130:27017
